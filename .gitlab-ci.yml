stages:
  - build
  - test
  - quality
  - package
  - docker
  - deploy

variables:
  IMAGE_NAME: "elhadji01/gestion-prof-service"
  SONAR_PROJECT_KEY: "elhadji-mamadou-sarr_gestion-prof-service"
  SONAR_ORG: "elhadji-mamadou-sarr"
  SONAR_HOST: "https://sonarcloud.io"
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - .m2/repository/

build:
  stage: build
  image: maven:3.8.6-openjdk-17
  script:
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - target/*.jar

#test:
#  stage: test
#  image: maven:3.8.6-openjdk-17
#  script:
#    - mvn test

sonarqube:
  stage: quality
  image: maven:3.8.6-openjdk-17
  script:
    - mvn sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.organization=${SONAR_ORG} -Dsonar.host.url=${SONAR_HOST}
  only:
    - master
    - develop
    - staging
    - preprod
  variables:
    SONAR_TOKEN: "$SONAR_TOKEN"

docker_build:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - TAG=$(echo ${CI_COMMIT_REF_NAME})
    - IMAGE_TAG="$IMAGE_NAME:$TAG"
#    - echo "Building Docker image with tag: $IMAGE_TAG"
    - docker build -t $IMAGE_TAG .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $IMAGE_TAG
  only:
    - master
    - develop
    - staging
    - preprod

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    # Configure kubeconfig
    - echo "$KUBECONFIG_CONTENT" | base64 --decode > kubeconfig.yaml
    - export KUBECONFIG=$(pwd)/kubeconfig.yaml
    - kubectl config use-context $KUBE_CONTEXT
    # Déploiement en fonction de la branche
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "develop" ]]; then
        echo "Déploiement en DEV avec Docker..."
        docker run -d -p 8080:8080 $IMAGE_NAME:develop
      elif [[ "$CI_COMMIT_REF_NAME" == "staging" ]]; then
        echo "Déploiement en STAGING avec Docker..."
        docker run -d -p 8080:8080 $IMAGE_NAME:staging
      elif [[ "$CI_COMMIT_REF_NAME" == "preprod" || "$CI_COMMIT_REF_NAME" == "prod" ]]; then
        echo "Déploiement sur Kubernetes (Préprod/Prod)..."
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
      else
        echo "Pas de déploiement pour la branche $CI_COMMIT_REF_NAME"
      fi
  only:
    - master
    - develop
    - staging
    - preprod
    - prod
